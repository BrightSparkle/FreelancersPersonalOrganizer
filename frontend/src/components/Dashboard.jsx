import React, { useContext, useEffect, useState } from 'react';
import { AuthContext } from '../context/AuthContext';
import { getProjects, createProject, deleteProject, getTasks } from '../api/api';
import { Link, useNavigate } from 'react-router-dom';
import ConfirmModal from '../components/ConfirmModal';

export default function Dashboard() {
  const { user, logout } = useContext(AuthContext);
  const [projects, setProjects] = useState([]);
  const [newProjectName, setNewProjectName] = useState('');
  const [error, setError] = useState(null);

  // –î–ª—è –º–æ–¥–∞–ª–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
  const [modalVisible, setModalVisible] = useState(false);
  const [projectToDelete, setProjectToDelete] = useState(null);

  // –î–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏ —Å–µ–≥–æ–¥–Ω—è
  const [projectsWithDeadlineToday, setProjectsWithDeadlineToday] = useState(new Set());

  const navigate = useNavigate();

  useEffect(() => {
    if (user) {
      loadProjectsAndCheckDeadlines();
    }
  }, [user]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞—á —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —Å–µ–≥–æ–¥–Ω—è
  async function loadProjectsAndCheckDeadlines() {
    try {
      const projectsData = await getProjects(user.username);
      if (!Array.isArray(projectsData)) {
        setError(projectsData.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤');
        return;
      }
      setProjects(projectsData);

      const deadlineProjectsSet = new Set();
      const today = new Date();

      await Promise.all(
        projectsData.map(async (project) => {
          const tasks = await getTasks(user.username, project.name);
          if (Array.isArray(tasks)) {
            const hasDeadlineToday = tasks.some(task => {
              if (!task.deadline) return false;
              if (task.endTime) return false; // –∑–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
              const dl = new Date(task.deadline);
              return (
                dl.getFullYear() === today.getFullYear() &&
                dl.getMonth() === today.getMonth() &&
                dl.getDate() === today.getDate()
              );
            });
            if (hasDeadlineToday) {
              deadlineProjectsSet.add(project.name);
            }
          }
        })
      );

      setProjectsWithDeadlineToday(deadlineProjectsSet);
    } catch (e) {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤');
    }
  }

  const handleCreate = async () => {
    if (!newProjectName.trim()) return;
    setError(null);
    try {
      const res = await createProject(newProjectName.trim(), user.username);
      if (res.name) {
        setProjects([...projects, res]);
        setNewProjectName('');
        // –û–±–Ω–æ–≤–∏–º –¥–µ–¥–ª–∞–π–Ω—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        loadProjectsAndCheckDeadlines();
      } else {
        setError(res.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞');
      }
    } catch {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
    }
  };

  // –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –ø—Ä–∏ –∫–ª–∏–∫–µ "–£–¥–∞–ª–∏—Ç—å"
  const onDeleteClick = (project) => {
    setProjectToDelete(project);
    setModalVisible(true);
  };

  // –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ
  const confirmDelete = async () => {
    if (!projectToDelete) return;
    setModalVisible(false);
    setError(null);
    try {
      const res = await deleteProject(projectToDelete.name, user.username);
      if (res.name) {
        setProjects(projects.filter(p => p.name !== projectToDelete.name));
        // –û–±–Ω–æ–≤–∏–º –¥–µ–¥–ª–∞–π–Ω—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        loadProjectsAndCheckDeadlines();
      } else {
        setError(res.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
    } finally {
      setProjectToDelete(null);
    }
  };

  // –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è
  const cancelDelete = () => {
    setModalVisible(false);
    setProjectToDelete(null);
  };

  // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç, —Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è (—Ä–µ–¥–∏—Ä–µ–∫—Ç —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω)
  if (user?.role === 'CLIENT') {
    return null;
  }

  return (
    <div className="dashboard" style={{ position: 'relative' }}>
      <header>
        <h1>–ü—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} ({user.role})</h1>
        <button onClick={() => logout()}>–í—ã–π—Ç–∏</button>
      </header>

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É */}
      {projectsWithDeadlineToday.size > 0 && (
        <div
          style={{
            position: 'fixed',
            top: 10,
            right: 10,
            backgroundColor: '#ffdddd',
            padding: '10px 20px',
            borderRadius: '8px',
            boxShadow: '0 0 10px rgba(255,0,0,0.5)',
            zIndex: 1000,
            fontWeight: 'bold',
            color: '#b00000',
          }}
        >
          –í–Ω–∏–º–∞–Ω–∏–µ! –ï—Å—Ç—å –∑–∞–¥–∞—á–∏ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —Å–µ–≥–æ–¥–Ω—è –≤ {projectsWithDeadlineToday.size} –ø—Ä–æ–µ–∫—Ç{projectsWithDeadlineToday.size > 1 ? '–∞—Ö' : '–µ'} üî•
        </div>
      )}

      {user.role === 'DEVELOPER' && (
        <div className="create-project">
          <input
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
            value={newProjectName}
            onChange={e => setNewProjectName(e.target.value)}
          />
          <button onClick={handleCreate}>–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç</button>
        </div>
      )}

      {error && <p className="error">{error}</p>}

      <ul className="project-list">
        {projects.map(p => {
          const hasDeadline = projectsWithDeadlineToday.has(p.name);
          return (
            <li key={p.name} style={{ position: 'relative' }}>
              <Link to={`/project/${encodeURIComponent(p.name)}`}>
                {p.name}
                {hasDeadline && (
                  <span title="–ï—Å—Ç—å –∑–∞–¥–∞—á–∏ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º —Å–µ–≥–æ–¥–Ω—è" style={{ color: 'red', marginLeft: 6, fontWeight: 'bold' }}>
                    üî•
                  </span>
                )}
              </Link>
              {user.role === 'DEVELOPER' && (
                <button onClick={() => onDeleteClick(p)} className="delete-btn">–£–¥–∞–ª–∏—Ç—å</button>
              )}
            </li>
          );
        })}
      </ul>

      <ConfirmModal
        visible={modalVisible}
        message={`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç "${projectToDelete?.name}"?`}
        onConfirm={confirmDelete}
        onCancel={cancelDelete}
      />
    </div>
  );
}